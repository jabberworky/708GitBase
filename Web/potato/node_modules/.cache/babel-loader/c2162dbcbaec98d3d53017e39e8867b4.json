{"ast":null,"code":"var _jsxFileName = \"/Users/woojibeom/Documents/potato/src/components/Probar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      mr: 1,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 35,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LinearProgressWithLabel;\nLinearProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  }\n});\nexport default function Probar() {\n  _s();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(10);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 3 : prevProgress + 1);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(LinearProgressWithLabel, {\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Probar, \"79vm6oqwm9/OQF/l/AKo8jlMMvM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Probar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinearProgressWithLabel\");\n$RefreshReg$(_c2, \"Probar\");","map":{"version":3,"sources":["/Users/woojibeom/Documents/potato/src/components/Probar.js"],"names":["React","PropTypes","makeStyles","LinearProgress","Typography","Box","LinearProgressWithLabel","props","Math","round","value","propTypes","number","isRequired","useStyles","root","width","Probar","classes","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACpC,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAA,WAA0CA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,EAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,eAAlC;AAAA,kBAAoD,GAAEC,IAAI,CAACC,KAAL,CAClDF,KAAK,CAACG,KAD4C,CAEpD;AAFF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAbQJ,uB;AAeTA,uBAAuB,CAACK,SAAxB,GAAoC;AAChC;AACJ;AACA;AACA;AACID,EAAAA,KAAK,EAAET,SAAS,CAACW,MAAV,CAAiBC;AALQ,CAApC;AAQA,MAAMC,SAAS,GAAGZ,UAAU,CAAC;AACzBa,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AADmB,CAAD,CAA5B;AAMA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAhC;AAEArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,MAAM;AAClB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC5BJ,MAAAA,WAAW,CAAEK,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,CAAtB,GAA0BA,YAAY,GAAG,CAA7D,CAAX;AACH,KAFwB,EAEtB,GAFsB,CAAzB;AAGA,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACH,KAFD;AAGH,GAPD,EAOG,EAPH;AASA,sBACI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACH,IAAxB;AAAA,2BACI,QAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlBuBF,M;UACJH,S;;;MADIG,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction LinearProgressWithLabel(props) {\n    return (\n        <Box display=\"flex\" alignItems=\"center\">\n            <Box width=\"100%\" mr={1}>\n                <LinearProgress variant=\"determinate\" {...props} />\n            </Box>\n            <Box minWidth={35}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n                    props.value,\n                )}%`}</Typography>\n            </Box>\n        </Box>\n    );\n}\n\nLinearProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate and buffer variants.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\n\nexport default function Probar() {\n    const classes = useStyles();\n    const [progress, setProgress] = React.useState(10);\n\n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((prevProgress) => (prevProgress >= 100 ? 3 : prevProgress + 1));\n        }, 800);\n        return () => {\n            clearInterval(timer);\n        };\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <LinearProgressWithLabel value={progress} />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}